# ---------------------------------
# Finds Ogre3D
# Adds library to target
# Adds include path
# ---------------------------------
FIND_PATH(PATH_OGRE3D include/Ogre.h PATHS ${OV_CUSTOM_DEPENDENCIES_PATH} ${OV_CUSTOM_DEPENDENCIES_PATH}/ogre $ENV{OGRE_HOME})
IF(PATH_OGRE3D)
	MESSAGE(STATUS "  Found Ogre3D...")
	INCLUDE_DIRECTORIES(${PATH_OGRE3D}/include)
	LINK_DIRECTORIES(${PATH_OGRE3D}/lib)

	IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
		SET(OGRE3D_LIBS OgreMain_d OIS_d)
	ELSE(CMAKE_BUILD_TYPE STREQUAL "Debug")
		SET(OGRE3D_LIBS OgreMain OIS)
	ENDIF(CMAKE_BUILD_TYPE STREQUAL "Debug")

	FOREACH(OGRE3D_LIB ${OGRE3D_LIBS})
		SET(OGRE3D_LIB1 "OGRE3D_LIB1-NOTFOUND")
		FIND_LIBRARY(OGRE3D_LIB1 NAMES ${OGRE3D_LIB} PATHS ${PATH_OGRE3D}/lib NO_DEFAULT_PATH)
		FIND_LIBRARY(OGRE3D_LIB1 NAMES ${OGRE3D_LIB})
		IF(OGRE3D_LIB1)
			MESSAGE(STATUS "    [  OK  ] Third party lib ${OGRE3D_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OGRE3D_LIB1})
		ELSE(OGRE3D_LIB1)
			MESSAGE(STATUS "    [FAILED] Third party lib ${OGRE3D_LIB}")
		ENDIF(OGRE3D_LIB1)
	ENDFOREACH(OGRE3D_LIB)

	ADD_DEFINITIONS(-DTARGET_HAS_ThirdPartyOGRE3D)
ELSE(PATH_OGRE3D)
	MESSAGE(STATUS "  FAILED to find Ogre3D")
ENDIF(PATH_OGRE3D)